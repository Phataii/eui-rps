@model UserRolesViewModel
@{
    ViewData["Title"] = "User Roles";
}
@* @model IEnumerable<rps.Models.UserRole> *@
<div class="app-wrapper">
    <div class="app-content">
        <!-- Body main section starts -->
        <main>
            <div class="container">
                <h2 class="mb-3">User Role Management</h2>
            
                <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addRoleModal">Add New User to Role</button>
                
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>User</th>
                                <th>Role</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var user in Model.UserRoles)
                        {
                            <tr>
                                <td>@user.Users.Email</td>
                                <td>@user.RoleName.RoleName</td>
                                <td>
                                    <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editUserModal" 
                                            data-id="@user.Id" data-user="@user.Users.Email">
                                        Edit
                                    </button>
                                   <button type="button" class="btn btn-danger btn-sm" data-role-id="@user.Id" data-bs-toggle="modal" data-bs-target="#deleteRoleModal">
                                        <i class="ti ti-trash"></i> Delete
                                    </button>

                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Modal for Adding New User -->
            <div class="modal fade" id="addRoleModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalTitle">Add User to Role</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="roleForm">
                                 <div class="mb-3">
                                    <label for="userSelect" class="form-label">Select User:</label>
                                    <select id="userSelect" class="form-select">
                                        <option value="">-- Select User --</option>
                                        @foreach (var user in Model.Users)
                                        {
                                            <option value="@user.Id">@user.Name</option> 
                                        }
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="roleSelect" class="form-label">Select Role:</label>
                                    <select id="roleSelect" class="form-select">
                                        <option value="">-- Select Role --</option>
                                        @foreach (var role in Model.Roles)
                                        {
                                            <option value="@role.Id">@role.RoleName</option>
                                        }
                                    </select>
                                </div>
                                <button type="submit" class="btn btn-success">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

             <!-- Edit User Modal -->
            <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editUserModalLabel">Change user role</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="editUserForm">
                                <input type="hidden" id="editUserId" name="Id">
                                <div class="mb-3">
                                    <label for="user" class="form-label">User</label>
                                    <input type="text" disabled class="form-control" id="user" name="user" required>
                                </div>
                                <div class="mb-3">
                                    <label for="roleId" class="form-label">Role</label>
                                    <select id="roleId" class="form-select">
                                        <option value="">-- Select Role --</option>
                                        @foreach (var role in Model.Roles)
                                        {
                                            <option value="@role.Id">@role.RoleName</option>
                                        }
                                    </select>
                                </div>
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="deleteRoleModal" tabindex="-1" aria-labelledby="deleteRoleModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteRoleModalLabel">Confirm Delete</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this role?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete</button>
                    </div>
                    </div>
                </div>
            </div>

        </main>
    </div>
    <!-- Body main section ends -->
</div>
  
<script>
    document.getElementById("roleForm").addEventListener("submit", async function(event) {
        event.preventDefault();
        
        let user = document.getElementById("userSelect").value;
        let role = document.getElementById("roleSelect").value;
        
        let data = { user, role };
        
        try {
            let response = await fetch("/api/auth/add-user-to-role", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });
            
            if (!response.ok) {
                throw new Error('Failed to create role');
            }

            const result = await response.json();
            alert('User has been added to role!');
            window.location.reload();
        } catch (error) {
            console.error("Error adding role:", error);
            alert("Error connecting to server");
        }
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var editUserModal = document.getElementById("editUserModal");
        editUserModal.addEventListener("show.bs.modal", function (event) {
            var button = event.relatedTarget; // Button that triggered the modal
            var userId = button.getAttribute("data-id");
            var userEmail = button.getAttribute("data-user");

            // Populate the modal fields
            document.getElementById("editUserId").value = userId;
            document.getElementById("user").value = userEmail;
        });
    });
</script>

<script>
    document.getElementById("editUserForm").addEventListener("submit", async function(event) {
        event.preventDefault();
        
        let id = document.getElementById("editUserId").value;
        let role = document.getElementById("roleId").value;

        let data = { id, role };
        console.log(data)
        try {
            let response = await fetch("/api/auth/edit-user-role", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                throw new Error('Failed to update role');
            }

            const result = await response.json();
            alert("User role updated successfully!");
            window.location.reload(); // Refresh page
        } catch (error) {
            console.error("Error updating role:", error);
            alert("Error connecting to the server");
        }
    });
</script>

<script>
    let selectedRoleId = null;

    // Capture role ID when opening the modal
    document.querySelectorAll('[data-bs-target="#deleteRoleModal"]').forEach(button => {
        button.addEventListener('click', function () {
            selectedRoleId = this.getAttribute('data-role-id');
        });
    });

    // Handle delete confirmation
    document.getElementById('confirmDeleteBtn').addEventListener('click', async function () {
        if (selectedRoleId) {
            try {
                const response = await fetch(`/api/auth/${selectedRoleId}`, {
                    method: 'DELETE'
                });

                if (response.status === 204) {
                    // Success – optionally remove the row from DOM
                    location.reload(); // Or use DOM removal instead of reload
                } else {
                    alert("Failed to delete role.");
                }
            } catch (error) {
                console.error("Delete error:", error);
                alert("Error deleting role.");
            }
        }
    });
</script>


















@* @model IEnumerable<rps.Models.Departments>

@{
    ViewData["Title"] = "Faculty Departments";
    var serialNumber = 1;
}

<div class="container mt-4">
    <h4 class="mb-3">Departments under Faculty ID 5</h4>

    @if (TempData["message"] != null)
    {
        <div class="alert alert-success">@TempData["message"]</div>
    }
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger">@TempData["error"]</div>
    }

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Department Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dept in Model)
            {
                <tr>
                    <td>@serialNumber++</td>
                    <td>@dept.Name</td>
                    <td>@dept.FacultyId</td>
                </tr>
            }
        </tbody>
    </table>
</div> *@
